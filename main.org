#+TITLE: Emacs Initialization
#+STARTUP: hideblocks
* Environment

  Predicates for host operating system and windowing system.
  
  #+begin_src emacs-lisp
    (setq mac-p (eq system-type 'darwin))
    (setq linux-p (eq system-type 'gnu/linux))
    (setq terminal-p (not window-system))
  #+end_src

  Don't use the FQDN on a Mac

  #+begin_src emacs-lisp
    (when mac-p
      (setq system-name (car (split-string system-name "\\."))))
  #+end_src

  Set default editor in (e)shell to emacsclient.

  #+begin_src emacs-lisp
    (setenv "EDITOR" "emacsclient")
  #+end_src

  Default to cat, i.e., no paging.

  #+begin_src emacs-lisp
    (setenv "PAGER" "cat")
  #+end_src

  Where to find Emacs' sources.

  #+begin_src emacs-lisp
    (setq find-function-C-source-directory
          (expand-file-name "~/site-lisp/src/emacs-sources"))
  #+end_src

  The load path is augmented by =~/site-lisp= and all direct
  children folders.

  #+begin_src emacs-lisp
    (dolist (addition '("~/site-lisp"))
      (add-to-list 'load-path addition)
      (let ((default-directory addition))
        (normal-top-level-add-subdirs-to-load-path)))
  #+end_src

  Add a local themes directory.

  #+begin_src emacs-lisp
    (let ((themes-directory (expand-file-name "~/site-lisp/themes")))
      (dolist (file (directory-files themes-directory))
        (let ((expanded-file (expand-file-name file themes-directory)))
          (when (file-directory-p expanded-file)
            (add-to-list 'custom-theme-load-path expanded-file)))))
  #+end_src

  Set custom path for custom variables.
 
  #+begin_src emacs-lisp
    (setq-default custom-file (expand-file-name "~/.emacs.d/custom.el"))
  #+end_src

  We load a set of libraries that are generally desirable.

  #+begin_src emacs-lisp
    (require 'cl)
    (require 'package)
    (require 'repeat)
    (require 'uniquify)
    (require 'grep)
    (require 'thingatpt)
    (require 'server)
    (require 'subword)
  #+end_src

  Custom path to install packages to.

  #+begin_src emacs-lisp
    (setq package-user-dir (expand-file-name "~/site-lisp/elpa"))
  #+end_src

  Configure ELPA package handling.

  #+begin_src emacs-lisp
    (setq package-archives '(("melpa" . "http://melpa.milkbox.net/packages/")
                              ("gnu" . "http://elpa.gnu.org/packages/")))
    ;; (when (not package-archive-contents)
    ;;   (package-refresh-contents))
    (package-initialize)
   #+end_src

  Now we're ready to ask for use-package:

  #+begin_src emacs-lisp
    (require 'use-package)
  #+end_src

  Turn off automatic saving.

  #+begin_src emacs-lisp
    (setq auto-save-default nil)
  #+end_src

  Don't make backup files when renaming files.

  #+begin_src emacs-lisp
    (setq make-backup-files nil)
  #+end_src

* Load modules

  More configuration split into org files.

  #+begin_src emacs-lisp
    (org-babel-load-file (expand-file-name "~/.emacs.d/helm.org"))
    (org-babel-load-file (expand-file-name "~/.emacs.d/god-mode.org"))
    (org-babel-load-file (expand-file-name "~/.emacs.d/appearance.org"))
    (org-babel-load-file (expand-file-name "~/.emacs.d/org.org"))
    (org-babel-load-file (expand-file-name "~/.emacs.d/vc.org"))
    (org-babel-load-file (expand-file-name "~/.emacs.d/search.org"))
    (org-babel-load-file (expand-file-name "~/.emacs.d/navigation.org"))
  #+end_src

